## Multiple Ingress with TLS terminating upstream
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-http-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  rules:
  - host: argocd.burritops.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: http
  # tls:
  # - hosts:
  #   - argocd.burritops.com
  #   secretName: argocd-secret # do not change, this is provided by Argo CD
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-grpc-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  rules:
  - host: grpc.argocd.burritops.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: http
  # tls:
  # - hosts:
  #   - grpc.argocd.burritops.com
  #   secretName: argocd-secret # do not change, this is provided by Argo CD

## Single Ingress with TLS terminating in ArgoCD

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server-ingress
#   namespace: argocd
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-prod
#     kubernetes.io/ingress.class: nginx
#     kubernetes.io/tls-acme: "true"
#     nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#     # If you encounter a redirect loop or are getting a 307 response code
#     # then you need to force the nginx ingress to connect to the backend using HTTPS.
#     #
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
# spec:
#   rules:
#   - host: argocd.burritops.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: argocd-server
#             port:
#               name: https
#   tls:
#   - hosts:
#     - argocd.burritops.com
#     secretName: argocd-secret # do not change, this is provided by Argo CD

## Junk

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server-http-ingress
#   namespace: argocd
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
# spec:
#   rules:
#   - http:
#       paths:
#       - backend:
#           serviceName: argocd-server
#           servicePort: http
#     host: shop.burritops.com
#   tls:
#   - hosts:
#     - shop.burritops.com
#     secretName: argocd-secret # do not change, this is provided by Argo CD
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server-grpc-ingress
#   namespace: argocd
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
# spec:
#   rules:
#   - http:
#       paths:
#       - backend:
#           serviceName: argocd-server
#           servicePort: https
#     host: grpc.shop.example.com
#   tls:
#   - hosts:
#     - grpc.shop.example.com
#     secretName: argocd-secret # do not change, this is provided by Argo CD
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-ingress
#   namespace: argocd
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     cert-manager.io/cluster-issuer: "letsencrypt-prod"
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
# spec:
#   tls:
#   - hosts:
#     - shop.burritops.com
#     secretName: argocd-secret
#   rules:
#   - host: shop.burritops.com
#     http:
#       paths:
#       - backend:
#           service:
#             name: argocd-server
#             port:
#               number: 80
#         pathType: Prefix
#         path: /
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server-grpc-ingress
#   namespace: argocd
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
# spec:
#   rules:
#   - host: www.burritops.com
#     http:
#       paths:
#       - backend:
#           service:
#             name: argocd-server
#             port:
#               number: 443
#         pathType: Prefix
#         path: /
#   tls:
#   - hosts:
#     - www.burritops.com
#     secretName: argocd-secret
